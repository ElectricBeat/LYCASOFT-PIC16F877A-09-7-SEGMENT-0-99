

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Oct 22 05:54:25 2018

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\08-7 SEGMENT 0-9 WITH 
                                 SWITCH\CODE\7 SEGMENT 0-9 WITH SWITCH.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\08-7 SEGMENT 0-9 WITH 
                                 SWITCH\CODE\7 SEGMENT 0-9 WITH SWITCH.c"
    45  2007  3F3A               	dw 0X3F3A ;#
    46                           	FNROOT	_main
    47                           	global	_DIG
    48                           psect	idataCOMMON,class=CODE,space=0,delta=2
    49                           global __pidataCOMMON
    50  076B                     __pidataCOMMON:
    51                           	file	"D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\08-7 SEGMENT 0-9 WIT
                                 H SWITCH\CODE\7 SEGMENT 0-9 WITH SWITCH.c"
    52                           	line	8
    53                           
    54                           ;initializer for _DIG
    55  076B  343F               	retlw	03Fh
    56  076C  3406               	retlw	06h
    57  076D  345B               	retlw	05Bh
    58  076E  344F               	retlw	04Fh
    59  076F  3466               	retlw	066h
    60  0770  346D               	retlw	06Dh
    61  0771  347D               	retlw	07Dh
    62  0772  3407               	retlw	07h
    63  0773  34FF               	retlw	0FFh
    64  0774  3467               	retlw	067h
    65                           	global	_Count
    66                           	global	_PORTB
    67  0006                     _PORTB	set	6
    68                           	global	_CARRY
    69  0018                     _CARRY	set	24
    70                           	global	_GIE
    71  005F                     _GIE	set	95
    72                           	global	_RB7
    73  0037                     _RB7	set	55
    74                           	global	_TRISB
    75  0086                     _TRISB	set	134
    76                           	global	_EEADR
    77  010D                     _EEADR	set	269
    78                           	global	_EEDATA
    79  010C                     _EEDATA	set	268
    80                           	global	_EECON1
    81  018C                     _EECON1	set	396
    82                           	global	_EECON2
    83  018D                     _EECON2	set	397
    84                           	global	_RD
    85  0C60                     _RD	set	3168
    86                           	global	_WR
    87  0C61                     _WR	set	3169
    88                           	global	_WREN
    89  0C62                     _WREN	set	3170
    90                           	file	"7 SEGMENT 0-9 WITH SWITCH.as"
    91                           	line	#
    92                           psect cinit,class=CODE,delta=2
    93                           global start_initialization
    94  07BE                     start_initialization:
    95                           
    96                           psect	bssCOMMON,class=COMMON,space=1
    97                           global __pbssCOMMON
    98  007A                     __pbssCOMMON:
    99  007A                     _Count:
   100  007A                            ds      2
   101                           
   102                           psect	dataCOMMON,class=COMMON,space=1
   103                           global __pdataCOMMON
   104  0070                     __pdataCOMMON:
   105                           	file	"D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\08-7 SEGMENT 0-9 WIT
                                 H SWITCH\CODE\7 SEGMENT 0-9 WITH SWITCH.c"
   106  0070                     _DIG:
   107  0070                            ds      10
   108                           
   109                           ; Clear objects allocated to COMMON
   110                           psect cinit,class=CODE,delta=2
   111  07BE  01FA               	clrf	((__pbssCOMMON)+0)&07Fh
   112  07BF  01FB               	clrf	((__pbssCOMMON)+1)&07Fh
   113                           global btemp
   114                           psect inittext,class=CODE,delta=2
   115                           global init_fetch,btemp
   116                           ;	Called with low address in FSR and high address in W
   117  0775                     init_fetch:
   118  0775  087E               	movf btemp,w
   119  0776  008A               	movwf pclath
   120  0777  087F               	movf btemp+1,w
   121  0778  0082               	movwf pc
   122                           global init_ram
   123                           ;Called with:
   124                           ;	high address of idata address in btemp 
   125                           ;	low address of idata address in btemp+1 
   126                           ;	low address of data in FSR
   127                           ;	high address + 1 of data in btemp-1
   128  0779                     init_ram:
   129  0779  120A  118A  2775   	fcall init_fetch
              120A  118A         
   130  077E  0080               	movwf indf,f
   131  077F  0A84               	incf fsr,f
   132  0780  0804               	movf fsr,w
   133  0781  067D               	xorwf btemp-1,w
   134  0782  1903               	btfsc status,2
   135  0783  3400               	retlw 0
   136  0784  0AFF               	incf btemp+1,f
   137  0785  1903               	btfsc status,2
   138  0786  0AFE               	incf btemp,f
   139  0787  2F79               	goto init_ram
   140                           ; Initialize objects allocated to COMMON
   141                           	global __pidataCOMMON
   142                           psect cinit,class=CODE,delta=2
   143  07C0  120A  118A  276B   	fcall	__pidataCOMMON+0		;fetch initializer
              120A  118A         
   144  07C5  00F0               	movwf	__pdataCOMMON+0&07fh		
   145  07C6  120A  118A  276C   	fcall	__pidataCOMMON+1		;fetch initializer
              120A  118A         
   146  07CB  00F1               	movwf	__pdataCOMMON+1&07fh		
   147  07CC  120A  118A  276D   	fcall	__pidataCOMMON+2		;fetch initializer
              120A  118A         
   148  07D1  00F2               	movwf	__pdataCOMMON+2&07fh		
   149  07D2  120A  118A  276E   	fcall	__pidataCOMMON+3		;fetch initializer
              120A  118A         
   150  07D7  00F3               	movwf	__pdataCOMMON+3&07fh		
   151  07D8  120A  118A  276F   	fcall	__pidataCOMMON+4		;fetch initializer
              120A  118A         
   152  07DD  00F4               	movwf	__pdataCOMMON+4&07fh		
   153  07DE  120A  118A  2770   	fcall	__pidataCOMMON+5		;fetch initializer
              120A  118A         
   154  07E3  00F5               	movwf	__pdataCOMMON+5&07fh		
   155  07E4  120A  118A  2771   	fcall	__pidataCOMMON+6		;fetch initializer
              120A  118A         
   156  07E9  00F6               	movwf	__pdataCOMMON+6&07fh		
   157  07EA  120A  118A  2772   	fcall	__pidataCOMMON+7		;fetch initializer
              120A  118A         
   158  07EF  00F7               	movwf	__pdataCOMMON+7&07fh		
   159  07F0  120A  118A  2773   	fcall	__pidataCOMMON+8		;fetch initializer
              120A  118A         
   160  07F5  00F8               	movwf	__pdataCOMMON+8&07fh		
   161  07F6  120A  118A  2774   	fcall	__pidataCOMMON+9		;fetch initializer
              120A  118A         
   162  07FB  00F9               	movwf	__pdataCOMMON+9&07fh		
   163                           psect cinit,class=CODE,delta=2
   164                           global end_of_initialization
   165                           
   166                           ;End of C runtime variable initialization code
   167                           
   168  07FC                     end_of_initialization:
   169  07FC  0183               clrf status
   170  07FD  120A  118A  2F88   ljmp _main	;jump to C main() function
   171                           psect	cstackCOMMON,class=COMMON,space=1
   172                           global __pcstackCOMMON
   173  0000                     __pcstackCOMMON:
   174                           	global	?_main
   175  0000                     ?_main:	; 0 bytes @ 0x0
   176                           	global	??_main
   177  0000                     ??_main:	; 0 bytes @ 0x0
   178 ;;Data sizes: Strings 0, constant 0, data 10, bss 2, persistent 0 stack 0
   179 ;;Auto spaces:   Size  Autos    Used
   180 ;; COMMON          14      0      12
   181 ;; BANK0           80      0       0
   182 ;; BANK1           80      0       0
   183 ;; BANK3           96      0       0
   184 ;; BANK2           96      0       0
   185                           
   186 ;;
   187 ;; Pointer list with targets:
   188                           
   189                           
   190                           
   191 ;;
   192 ;; Critical Paths under _main in COMMON
   193 ;;
   194 ;;   None.
   195 ;;
   196 ;; Critical Paths under _main in BANK0
   197 ;;
   198 ;;   None.
   199 ;;
   200 ;; Critical Paths under _main in BANK1
   201 ;;
   202 ;;   None.
   203 ;;
   204 ;; Critical Paths under _main in BANK3
   205 ;;
   206 ;;   None.
   207 ;;
   208 ;; Critical Paths under _main in BANK2
   209 ;;
   210 ;;   None.
   211                           
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   214 ;;
   215                           
   216 ;;
   217 ;;Call Graph Tables:
   218 ;;
   219 ;; ---------------------------------------------------------------------------------
   220 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   221 ;; ---------------------------------------------------------------------------------
   222 ;; (0) _main                                                 0     0      0       0
   223 ;; ---------------------------------------------------------------------------------
   224 ;; Estimated maximum stack depth 0
   225 ;; ---------------------------------------------------------------------------------
   226                           
   227 ;; Call Graph Graphs:
   228                           
   229 ;; _main (ROOT)
   230 ;;
   231                           
   232 ;; Address spaces:
   233                           
   234 ;;Name               Size   Autos  Total    Cost      Usage
   235 ;;BANK3               60      0       0       9        0.0%
   236 ;;BITBANK3            60      0       0       8        0.0%
   237 ;;SFR3                 0      0       0       4        0.0%
   238 ;;BITSFR3              0      0       0       4        0.0%
   239 ;;BANK2               60      0       0      11        0.0%
   240 ;;BITBANK2            60      0       0      10        0.0%
   241 ;;SFR2                 0      0       0       5        0.0%
   242 ;;BITSFR2              0      0       0       5        0.0%
   243 ;;SFR1                 0      0       0       2        0.0%
   244 ;;BITSFR1              0      0       0       2        0.0%
   245 ;;BANK1               50      0       0       7        0.0%
   246 ;;BITBANK1            50      0       0       6        0.0%
   247 ;;CODE                 0      0       0       0        0.0%
   248 ;;DATA                 0      0       C      12        0.0%
   249 ;;ABS                  0      0       C       3        0.0%
   250 ;;NULL                 0      0       0       0        0.0%
   251 ;;STACK                0      0       0       2        0.0%
   252 ;;BANK0               50      0       0       5        0.0%
   253 ;;BITBANK0            50      0       0       4        0.0%
   254 ;;SFR0                 0      0       0       1        0.0%
   255 ;;BITSFR0              0      0       0       1        0.0%
   256 ;;COMMON               E      0       C       1       85.7%
   257 ;;BITCOMMON            E      0       0       0        0.0%
   258 ;;EEDATA             100      0       0       0        0.0%
   259                           
   260                           	global	_main
   261                           psect	maintext,global,class=CODE,delta=2
   262                           global __pmaintext
   263  0788                     __pmaintext:
   264                           
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 14 in file "D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\08-7 SEGMENT 0-9 WITH SWITCH\CODE\7 SE
       GMENT 0-9 WITH SWITCH.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;		None               void
   274 ;; Registers used:
   275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   276 ;; Tracked objects:
   277 ;;		On entry : 17F/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   281 ;;      Params:         0       0       0       0       0
   282 ;;      Locals:         0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0
   284 ;;      Totals:         0       0       0       0       0
   285 ;;Total ram usage:        0 bytes
   286 ;; This function calls:
   287 ;;		Nothing
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           psect	maintext
   293                           	file	"D:\SRIDHAR\02-LYCASOFT EMBEDDED CODING\02-PIC 16F877A CODING\08-7 SEGMENT 0-9 WIT
                                 H SWITCH\CODE\7 SEGMENT 0-9 WITH SWITCH.c"
   294                           	line	14
   295                           	global	__size_of_main
   296  0036                     	__size_of_main	equ	__end_of_main-_main
   297                           	
   298  0788                     _main:	
   299                           	opt	stack 8
   300                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   301                           	line	15
   302                           	
   303  0788                     l1746:	
   304                           ;7 SEGMENT 0-9 WITH SWITCH.c: 15: TRISB=0X80;
   305  0788  3080               	movlw	(080h)
   306  0789  1683               	bsf	status, 5	;RP0=1, select bank1
   307  078A  1303               	bcf	status, 6	;RP1=0, select bank1
   308  078B  0086               	movwf	(134)^080h	;volatile
   309                           	line	16
   310                           	
   311  078C                     l1748:	
   312                           ;7 SEGMENT 0-9 WITH SWITCH.c: 16: PORTB=0X00;
   313  078C  1283               	bcf	status, 5	;RP0=0, select bank0
   314  078D  1303               	bcf	status, 6	;RP1=0, select bank0
   315  078E  0186               	clrf	(6)	;volatile
   316  078F  2FB4               	goto	l690
   317                           	line	18
   318                           ;7 SEGMENT 0-9 WITH SWITCH.c: 18: while(1)
   319                           	
   320  0790                     l689:	
   321                           	line	20
   322                           ;7 SEGMENT 0-9 WITH SWITCH.c: 19: {
   323                           ;7 SEGMENT 0-9 WITH SWITCH.c: 20: while(RB7==1)
   324  0790  2FB4               	goto	l690
   325                           	
   326  0791                     l691:	
   327                           	line	22
   328                           	
   329  0791                     l1750:	
   330                           ;7 SEGMENT 0-9 WITH SWITCH.c: 21: {
   331                           ;7 SEGMENT 0-9 WITH SWITCH.c: 22: PORTB=DIG[Count];
   332  0791  087A               	movf	(_Count),w
   333  0792  3E70               	addlw	_DIG&0ffh
   334  0793  0084               	movwf	fsr0
   335  0794  0800               	movf	indf,w
   336  0795  0086               	movwf	(6)	;volatile
   337                           	line	23
   338                           	
   339  0796                     l1752:	
   340                           ;7 SEGMENT 0-9 WITH SWITCH.c: 23: Count++;
   341  0796  3001               	movlw	low(01h)
   342  0797  07FA               	addwf	(_Count),f
   343  0798  1803               	skipnc
   344  0799  0AFB               	incf	(_Count+1),f
   345  079A  3000               	movlw	high(01h)
   346  079B  07FB               	addwf	(_Count+1),f
   347                           	line	24
   348                           	
   349  079C                     l1754:	
   350                           ;7 SEGMENT 0-9 WITH SWITCH.c: 24: if(Count>=10)
   351  079C  087B               	movf	(_Count+1),w
   352  079D  3A80               	xorlw	80h
   353  079E  00FF               	movwf	btemp+1
   354  079F  3080               	movlw	(high(0Ah))^80h
   355  07A0  027F               	subwf	btemp+1,w
   356  07A1  1D03               	skipz
   357  07A2  2FA5               	goto	u15
   358  07A3  300A               	movlw	low(0Ah)
   359  07A4  027A               	subwf	(_Count),w
   360  07A5                     u15:
   361                           
   362  07A5  1C03               	skipc
   363  07A6  2FA8               	goto	u11
   364  07A7  2FA9               	goto	u10
   365  07A8                     u11:
   366  07A8  2FAD               	goto	l693
   367  07A9                     u10:
   368                           	line	26
   369                           	
   370  07A9                     l1756:	
   371                           ;7 SEGMENT 0-9 WITH SWITCH.c: 25: {
   372                           ;7 SEGMENT 0-9 WITH SWITCH.c: 26: Count=0;
   373  07A9  01FA               	clrf	(_Count)
   374  07AA  01FB               	clrf	(_Count+1)
   375  07AB  2FAD               	goto	l693
   376                           	line	27
   377                           	
   378  07AC                     l692:	
   379                           	line	28
   380                           ;7 SEGMENT 0-9 WITH SWITCH.c: 27: }
   381                           ;7 SEGMENT 0-9 WITH SWITCH.c: 28: while(RB7==1);
   382  07AC  2FAD               	goto	l693
   383                           	
   384  07AD                     l694:	
   385                           	
   386  07AD                     l693:	
   387  07AD  1283               	bcf	status, 5	;RP0=0, select bank0
   388  07AE  1303               	bcf	status, 6	;RP1=0, select bank0
   389  07AF  1B86               	btfsc	(55/8),(55)&7
   390  07B0  2FB2               	goto	u21
   391  07B1  2FB3               	goto	u20
   392  07B2                     u21:
   393  07B2  2FAD               	goto	l693
   394  07B3                     u20:
   395  07B3  2FB4               	goto	l690
   396                           	
   397  07B4                     l695:	
   398                           	line	29
   399                           	
   400  07B4                     l690:	
   401                           	line	20
   402  07B4  1B86               	btfsc	(55/8),(55)&7
   403  07B5  2FB7               	goto	u31
   404  07B6  2FB8               	goto	u30
   405  07B7                     u31:
   406  07B7  2F91               	goto	l1750
   407  07B8                     u30:
   408  07B8  2FB4               	goto	l690
   409                           	
   410  07B9                     l696:	
   411  07B9  2FB4               	goto	l690
   412                           	line	30
   413                           	
   414  07BA                     l697:	
   415                           	line	18
   416  07BA  2FB4               	goto	l690
   417                           	
   418  07BB                     l698:	
   419                           	line	31
   420                           	
   421  07BB                     l699:	
   422                           	global	start
   423  07BB  120A  118A  2800   	ljmp	start
   424                           	opt stack 0
   425                           GLOBAL	__end_of_main
   426  07BE                     	__end_of_main:
   427 ;; =============== function _main ends ============
   428                           
   429                           	signat	_main,88
   430                           psect	maintext
   431                           	global	btemp
   432  007E                     	btemp set 07Eh
   433                           
   434                           	DABS	1,126,2	;btemp
   435                           	global	wtemp0
   436  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Oct 22 05:54:25 2018

                   pc 0002                    _RD 0C60                    u10 07A9                    u11 07A8  
                  u20 07B3                    u21 07B2                    u30 07B8                    u31 07B7  
                  u15 07A5                    _WR 0C61                    fsr 0004                   l690 07B4  
                 l691 0791                   l692 07AC                   l693 07AD                   l694 07AD  
                 l695 07B4                   l696 07B9                   l697 07BA                   l689 0790  
                 _DIG 0070                   l698 07BB                   l699 07BB                   _GIE 005F  
                 _RB7 0037                   fsr0 0004                   indf 0000                  l1750 0791  
                l1752 0796                  l1754 079C                  l1746 0788                  l1756 07A9  
                l1748 078C                  _WREN 0C62                  _main 0788                  btemp 007E  
                start 0000                 ?_main 0000                 _EEADR 010D                 _CARRY 0018  
               _PORTB 0006                 _TRISB 0086                 _Count 007A                 pclath 000A  
               status 0003                 wtemp0 007E          __end_of_main 07BE                ??_main 0000  
              _EEDATA 010C                _EECON1 018C                _EECON2 018D          __pdataCOMMON 0070  
      __pcstackCOMMON 0000            __pmaintext 0788  end_of_initialization 07FC               init_ram 0779  
       __pidataCOMMON 076B   start_initialization 07BE           __pbssCOMMON 007A             init_fetch 0775  
       __size_of_main 0036  
